{
  "name": "puppetlabs-neutron",
  "version": "3.0.0",
  "source": "https://github.com/stackforge/puppet-neutron",
  "author": "Joe Topjian,Endre Karlson,Emilien Macchi,Dan Bode,Dmitry Ukov,Edgar Mangana,Robert Starmer,Ian Wells,Daneyon Hansen",
  "license": "Apache License 2.0",
  "summary": "Puppet module for OpenStack Neutron",
  "description": "Puppet module to install and configure the OpenStack network service, Neutron",
  "project_page": "https://launchpad.net/puppet-neutron",
  "dependencies": [
    {
      "name": "puppetlabs/vswitch",
      "version_requirement": ">=0.0.1 <1.0.0"
    },
    {
      "name": "puppetlabs/inifile",
      "version_requirement": ">=1.0.0 <2.0.0"
    },
    {
      "name": "puppetlabs/mysql",
      "version_requirement": ">=0.6.1 <1.0.0"
    },
    {
      "name": "puppetlabs/stdlib",
      "version_requirement": ">=2.3.0"
    },
    {
      "name": "puppetlabs/keystone",
      "version_requirement": ">=3.0.0 <4.0.0"
    },
    {
      "name": "puppetlabs/nova",
      "version_requirement": ">=3.0.0 <4.0.0"
    }
  ],
  "types": [
    {
      "name": "neutron_api_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from api-paste.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from neutron.conf  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_dhcp_agent_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from dhcp_agent.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_fwaas_service_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from fwaas_driver.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_l3_agent_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from l3_agent.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_l3_ovs_bridge",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Symbolic name for the ovs bridge  Values can match `/.*/`."
        },
        {
          "name": "subnet_name",
          "doc": "Name of the subnet that will use the bridge as gateway"
        }
      ],
      "providers": [
        {
          "name": "neutron",
          "doc": "    Neutron provider to manage neutron_l3_ovs_bridge type.\n\n    The provider ensures that the gateway ip of the subnet is\n    configured on the ovs bridge.\n\n\nRequired binaries: `/sbin/ip`."
        }
      ]
    },
    {
      "name": "neutron_lbaas_agent_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from lbaas_agent.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_metadata_agent_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from metadata_agent.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_metering_agent_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from metering_agent.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_network",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "id",
          "doc": "The unique id of the network"
        },
        {
          "name": "admin_state_up",
          "doc": "The administrative status of the network  Values can match `/(t|T)rue/`, `/(f|F)alse/`."
        },
        {
          "name": "shared",
          "doc": "Whether this network should be shared across all tenants or not  Values can match `/(t|T)rue/`, `/(f|F)alse/`."
        },
        {
          "name": "tenant_id",
          "doc": "A uuid identifying the tenant which will own the network."
        },
        {
          "name": "provider_network_type",
          "doc": "The physical mechanism by which the virtual network is realized.  Valid values are `flat`, `vlan`, `local`, `gre`."
        },
        {
          "name": "provider_physical_network",
          "doc": "      The name of the physical network over which the virtual network\n      is realized for flat and VLAN networks.\n  Values can match `/\\S+/`."
        },
        {
          "name": "provider_segmentation_id",
          "doc": "Identifies an isolated segment on the physical network."
        },
        {
          "name": "router_external",
          "doc": "Whether this router will route traffic to an external network  Values can match `/(t|T)rue/`, `/(f|F)alse/`."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Symbolic name for the network  Values can match `/.*/`."
        },
        {
          "name": "tenant_name",
          "doc": "The name of the tenant which will own the network."
        }
      ],
      "providers": [
        {
          "name": "neutron",
          "doc": "    Neutron provider to manage neutron_network type.\n\n    Assumes that the neutron service is configured on the same host.\n\n\nRequired binaries: `neutron`."
        }
      ]
    },
    {
      "name": "neutron_plugin_cisco",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from cisco_plugins.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_plugin_cisco_credentials",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from credentials.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_plugin_cisco_db_conn",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from plugins/cisco/db_conn.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_plugin_cisco_l2network",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from plugins/cisco/l2network_plugin.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_plugin_linuxbridge",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from linuxbridge_conf.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_plugin_ml2",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from ml2_conf.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_plugin_ovs",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from ovs_neutron_plugin.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    },
    {
      "name": "neutron_router",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "id",
          "doc": "The unique id of the router"
        },
        {
          "name": "admin_state_up",
          "doc": "The administrative status of the router  Values can match `/(t|T)rue/`, `/(f|F)alse/`."
        },
        {
          "name": "external_gateway_info",
          "doc": "      External network that this router connects to for gateway services\n      (e.g., NAT).\n"
        },
        {
          "name": "gateway_network_name",
          "doc": "      The name of the external network that this router connects to\n      for gateway services (e.g. NAT).\n"
        },
        {
          "name": "gateway_network_id",
          "doc": "      The uuid of the external network that this router connects to\n      for gateway services (e.g. NAT).\n"
        },
        {
          "name": "status",
          "doc": "Whether the router is currently operational or not."
        },
        {
          "name": "tenant_id",
          "doc": "A uuid identifying the tenant which will own the router."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Symbolic name for the router  Values can match `/.*/`."
        },
        {
          "name": "tenant_name",
          "doc": "The name of the tenant which will own the router."
        }
      ],
      "providers": [
        {
          "name": "neutron",
          "doc": "    Neutron provider to manage neutron_router type.\n\n    Assumes that the neutron service is configured on the same host.\n\n\nRequired binaries: `neutron`."
        }
      ]
    },
    {
      "name": "neutron_router_interface",
      "doc": "    This is currently used to model the creation of\n    neutron router interfaces.\n\n    Router interfaces are an association between a router and a\n    subnet.\n",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "id",
          "doc": ""
        },
        {
          "name": "router_name",
          "doc": ""
        },
        {
          "name": "subnet_name",
          "doc": ""
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "  Values can match `/^\\S+:\\S+$/`."
        }
      ],
      "providers": [
        {
          "name": "neutron",
          "doc": "    Neutron provider to manage neutron_router_interface type.\n\n    Assumes that the neutron service is configured on the same host.\n\n    It is not possible to manage an interface for the subnet used by\n    the gateway network, and such an interface will appear in the list\n    of resources ('puppet resource [type]').  Attempting to manage the\n    gateway interfae will result in an error.\n\n\n\nRequired binaries: `neutron`."
        }
      ]
    },
    {
      "name": "neutron_subnet",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "id",
          "doc": "The unique id of the subnet"
        },
        {
          "name": "cidr",
          "doc": "CIDR representing IP range for this subnet, based on IP version"
        },
        {
          "name": "ip_version",
          "doc": "The IP version of the CIDR  Valid values are `4`, `6`."
        },
        {
          "name": "allocation_pools",
          "doc": "Sub-ranges of cidr available for dynamic allocation to ports"
        },
        {
          "name": "gateway_ip",
          "doc": "The default gateway used by devices in this subnet"
        },
        {
          "name": "enable_dhcp",
          "doc": "Whether DHCP is enabled for this subnet or not.  Values can match `/(t|T)rue/`, `/(f|F)alse/`."
        },
        {
          "name": "host_routes",
          "doc": "      Routes that should be used by devices with IPs from this subnet\n      (not including local subnet route).\n"
        },
        {
          "name": "dns_nameservers",
          "doc": "DNS name servers used by hosts in this subnet."
        },
        {
          "name": "network_id",
          "doc": "A uuid identifying the network this subnet is associated with."
        },
        {
          "name": "tenant_id",
          "doc": "A uuid identifying the tenant which will own the subnet."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Symbolic name for the subnet  Values can match `/.*/`."
        },
        {
          "name": "network_name",
          "doc": "The name of the network this subnet is associated with."
        },
        {
          "name": "tenant_name",
          "doc": "The name of the tenant which will own the subnet."
        }
      ],
      "providers": [
        {
          "name": "neutron",
          "doc": "    Neutron provider to manage neutron_subnet type.\n\n    Assumes that the neutron service is configured on the same host.\n\n\nRequired binaries: `neutron`."
        }
      ]
    },
    {
      "name": "neutron_vpnaas_agent_config",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "value",
          "doc": "The value of the setting to be defined."
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "Section/setting name to manage from vpn_agent.ini  Values can match `/\\S+\\/\\S+/`."
        }
      ],
      "providers": [
        {
          "name": "ini_setting",
          "doc": ""
        }
      ]
    }
  ],
  "checksums": {
    "Gemfile": "a01e3f0d8ee43217838d92197f32f28f",
    "LICENSE": "1dece7821bf3fd70fe1309eaa37d52a2",
    "Modulefile": "714106065fd72c96fc15581911610db8",
    "README.md": "dc0d0294ba28e745431a88efed986fc0",
    "Rakefile": "2ca4ff31c946a19edd44348fbfdc2aab",
    "examples/base_provision.pp": "34b6dc4a44b49eb061a9e8433f6a7b9d",
    "examples/create_network.sh": "32256ea9c0a927dd6b02e2907cd97bc7",
    "examples/neutron.pp": "203feb59e162aa8871abfaf6960a871c",
    "lib/puppet/parser/functions/validate_network_vlan_ranges.rb": "2cc5c86d95093a462b1a419f3ac3e7df",
    "lib/puppet/parser/functions/validate_tunnel_id_ranges.rb": "147a6488352ab5cca8b7c08a8b98d13c",
    "lib/puppet/parser/functions/validate_vni_ranges.rb": "d3a0272b5ee197164c32abc3d96f3ad8",
    "lib/puppet/parser/functions/validate_vxlan_udp_port.rb": "2e7a8f9b954c23d5e254e1d6f59f7377",
    "lib/puppet/provider/neutron.rb": "1a5b029ba852a593ae812f48e5ee2c03",
    "lib/puppet/provider/neutron_api_config/ini_setting.rb": "631c8cae1605073b6cf73e9a88b0fbe4",
    "lib/puppet/provider/neutron_config/ini_setting.rb": "3be345702d91cd43744f8eceed6bb658",
    "lib/puppet/provider/neutron_dhcp_agent_config/ini_setting.rb": "34c4ef3300240a85fa59683307ae0a6a",
    "lib/puppet/provider/neutron_fwaas_service_config/ini_setting.rb": "c3bc43b3a671cbb279eeb6c228bba0fe",
    "lib/puppet/provider/neutron_l3_agent_config/ini_setting.rb": "b58b66445b7dcb8faaea1284fc24a718",
    "lib/puppet/provider/neutron_l3_ovs_bridge/neutron.rb": "7f71590c588d08cda106a3525b98c51f",
    "lib/puppet/provider/neutron_lbaas_agent_config/ini_setting.rb": "0f11d60319915d4b7866768ff127d5b2",
    "lib/puppet/provider/neutron_metadata_agent_config/ini_setting.rb": "2792cdfdd3c7d1cd4c10e5a7a467a6cb",
    "lib/puppet/provider/neutron_metering_agent_config/ini_setting.rb": "f0fd02e858a785389bcb46bd90561423",
    "lib/puppet/provider/neutron_network/neutron.rb": "a1634a641c9e4e81a7e7aabc705bcd9e",
    "lib/puppet/provider/neutron_plugin_cisco/ini_setting.rb": "548797197bac607556f341fb9d0bf375",
    "lib/puppet/provider/neutron_plugin_cisco_credentials/ini_setting.rb": "85b730f62749cf862b7fcac0bac7f621",
    "lib/puppet/provider/neutron_plugin_cisco_db_conn/ini_setting.rb": "6594e6554e11d8d0ca92768d04dc5d38",
    "lib/puppet/provider/neutron_plugin_cisco_l2network/ini_setting.rb": "ff993835dc8b1160b4b50817c2540635",
    "lib/puppet/provider/neutron_plugin_linuxbridge/ini_setting.rb": "14b51050879956a077ee186107faafba",
    "lib/puppet/provider/neutron_plugin_ml2/ini_setting.rb": "e95fefe41a89fa9869809f0bca76197a",
    "lib/puppet/provider/neutron_plugin_ovs/ini_setting.rb": "8c2b5c9cc51704ed29026673b3bc4d55",
    "lib/puppet/provider/neutron_router/neutron.rb": "b21ca23210cac45485a2c11fe3ca4ca8",
    "lib/puppet/provider/neutron_router_interface/neutron.rb": "de95f09c2a9e055c2e6eee226ba087b6",
    "lib/puppet/provider/neutron_subnet/neutron.rb": "367b5b6ec9bd9ec0315384df8216d46a",
    "lib/puppet/provider/neutron_vpnaas_agent_config/ini_setting.rb": "a38a2e680c1bd9c812462be1c907d83b",
    "lib/puppet/type/neutron_api_config.rb": "99b0eca0d74636df1858f5dbc68a8708",
    "lib/puppet/type/neutron_config.rb": "9de57ffe7acea6318a5ee959d28f3bb1",
    "lib/puppet/type/neutron_dhcp_agent_config.rb": "1d84a246988a9dc694d78c8d11e0a786",
    "lib/puppet/type/neutron_fwaas_service_config.rb": "e6f8fd329610b5870606f069f5aa5895",
    "lib/puppet/type/neutron_l3_agent_config.rb": "e6569c8eb8229dcade9a0e1bf243e1e3",
    "lib/puppet/type/neutron_l3_ovs_bridge.rb": "058d18a7e7cc88d446aa07cf25a657fe",
    "lib/puppet/type/neutron_lbaas_agent_config.rb": "e9ff6b363708eff717c89b4a83d6126e",
    "lib/puppet/type/neutron_metadata_agent_config.rb": "f12ba9af339e9bbd29b791a0a75931be",
    "lib/puppet/type/neutron_metering_agent_config.rb": "92e2ec411b06e777e6a54be07f953108",
    "lib/puppet/type/neutron_network.rb": "0d4ad607ba1f35f8e8faa319aa0a27c6",
    "lib/puppet/type/neutron_plugin_cisco.rb": "1ad23adde81d5e8395f200c25bf2c04f",
    "lib/puppet/type/neutron_plugin_cisco_credentials.rb": "7682f1efff298f94ce86ba449ac0c0f6",
    "lib/puppet/type/neutron_plugin_cisco_db_conn.rb": "c282caef28a928e2be91998f177ff6bd",
    "lib/puppet/type/neutron_plugin_cisco_l2network.rb": "69fde6803ee5cb7e8294037ef571fc60",
    "lib/puppet/type/neutron_plugin_linuxbridge.rb": "ce1461b91660a20a4944f64d208cfe85",
    "lib/puppet/type/neutron_plugin_ml2.rb": "91878082ae1568839f28f593ce6579c5",
    "lib/puppet/type/neutron_plugin_ovs.rb": "8c9bbb54baa51424106cd852a0a465b0",
    "lib/puppet/type/neutron_router.rb": "cbfbf082bf43612d9c896547dea78988",
    "lib/puppet/type/neutron_router_interface.rb": "2f3f839d6136f59b5c78790fd0fab22a",
    "lib/puppet/type/neutron_subnet.rb": "ec14d639d9485a9efd77e8f10d46c849",
    "lib/puppet/type/neutron_vpnaas_agent_config.rb": "11ebe4cb0655013cb551390df1f046f4",
    "manifests/agents/dhcp.pp": "8b7f5bf02190e91c06e944490b59f36a",
    "manifests/agents/l3.pp": "7523006c4c237480570e952952162bf1",
    "manifests/agents/lbaas.pp": "bcf795a0bfee52aa82cacc58ac8a4dd9",
    "manifests/agents/linuxbridge.pp": "ee33489cbb8aac2ea81bdd334183b254",
    "manifests/agents/metadata.pp": "0f9bbedd72caca80912cbaf9718be3db",
    "manifests/agents/metering.pp": "df5f0f4f1e2579f7994032f37873a8e2",
    "manifests/agents/ovs.pp": "bebb0780e8a4c6dd2ef7e5704af4b99c",
    "manifests/agents/vpnaas.pp": "9404b658d1e32a0c3b9a97af0c02b899",
    "manifests/client.pp": "338584745b937ea3309bcee01cb735e5",
    "manifests/db/mysql/host_access.pp": "7d6f4a5e528ea329cb50b218f53b1b57",
    "manifests/db/mysql.pp": "b65eaf7c5d3bc9ff06b318bce1db9b0c",
    "manifests/init.pp": "ca6a19c0a897b124ecf2fb543b8e57b2",
    "manifests/keystone/auth.pp": "b83df16908cff1b3bcfcaec4cb24e3e0",
    "manifests/params.pp": "8e5a5e71d52757f9d9deb8a51420a598",
    "manifests/plugins/cisco.pp": "5d9db695bb5fb9c1e37fb388f7099ffb",
    "manifests/plugins/linuxbridge.pp": "8d7c869ec40a2acd1c0643ba44075f90",
    "manifests/plugins/ml2/driver.pp": "f2338629b868ab67a62a98c31ed6ac11",
    "manifests/plugins/ml2.pp": "0687e9cb584f43dba27eb1dca3d8243f",
    "manifests/plugins/ovs/bridge.pp": "1a895380424cdf378d7f5966c656e250",
    "manifests/plugins/ovs/port.pp": "7e22b5aa08d31091126fc5af05434e10",
    "manifests/plugins/ovs.pp": "3ecfc1c1dbbddfc285adac3e8ce87438",
    "manifests/quota.pp": "3d182181692e9753c0a224b65878040c",
    "manifests/server.pp": "415169504e2c46295c7a1e6cebd89917",
    "manifests/services/fwaas.pp": "d7bb175aa3358d551561571fe3789451",
    "spec/classes/neutron_agents_dhcp_spec.rb": "8333311c2612a32d79435b2918449224",
    "spec/classes/neutron_agents_l3_spec.rb": "0b6750e34078a5b01b3a57b5009f6f2d",
    "spec/classes/neutron_agents_lbaas_spec.rb": "880571531441392c20fcafbaac0a3ea5",
    "spec/classes/neutron_agents_linuxbridge_spec.rb": "9e284fa920917084f779d5be57df815c",
    "spec/classes/neutron_agents_metadata_spec.rb": "9facd9a3276d2e940cf280f08ee5df1e",
    "spec/classes/neutron_agents_metering_spec.rb": "173fd1c7d7c29e7e93a5e933e05599cd",
    "spec/classes/neutron_agents_ovs_spec.rb": "9de960e4fbcb5ac27360335076965e2e",
    "spec/classes/neutron_agents_vpnaas_spec.rb": "12705908fc65e0658a2d092e3666fdca",
    "spec/classes/neutron_client_spec.rb": "2a1472c314dc3bcd2ebfb0d3e468a4d6",
    "spec/classes/neutron_db_mysql_spec.rb": "303b9510fd91b85b5fe66380f37d80c9",
    "spec/classes/neutron_init_spec.rb": "8662d22b016d7e31f1039e3bfaa03c55",
    "spec/classes/neutron_keystone_auth_spec.rb": "482d9f2a3c73e661634280f6fef17d4f",
    "spec/classes/neutron_plugins_cisco_spec.rb": "a703f6eee0b38c605abae5091064f40e",
    "spec/classes/neutron_plugins_linuxbridge_spec.rb": "7b8cb8174dfd6e3b8305aa9569828421",
    "spec/classes/neutron_plugins_ml2_spec.rb": "464db421ba54fc54eac40480cf1a695b",
    "spec/classes/neutron_plugins_ovs_spec.rb": "74b5701d7f9985376210cf0c48000ec0",
    "spec/classes/neutron_quota_spec.rb": "f8ae6f989d4578efd445b978ba339fc7",
    "spec/classes/neutron_server_spec.rb": "d4ffaad0d7540246d5fe3bb0a2fbae81",
    "spec/classes/neutron_services_fwaas_spec.rb": "b67f7246707d7e8d2a3ae70d6332fa28",
    "spec/defines/neutron_db_mysql_host_access_spec.rb": "766fba87e4505627c3e224d968b90cff",
    "spec/shared_examples.rb": "172c63c57efca8c741f297494ed9ef0f",
    "spec/spec_helper.rb": "41d71ed92d01bb23d52397572e9b24bb",
    "spec/unit/provider/neutron_l3_ovs_bridge/neutron_spec.rb": "4f0f61cd1d2ad500dd5fd8f6bd457377",
    "spec/unit/provider/neutron_network/neutron_spec.rb": "ed876c0eee4e2400345533f717e4c37c",
    "spec/unit/provider/neutron_router/neutron_spec.rb": "ea39b71183502e06ae46503b633de7ca",
    "spec/unit/provider/neutron_router_interface/neutron_spec.rb": "03d425ae2fd6e4ee354179c9f239bd39",
    "spec/unit/provider/neutron_spec.rb": "7e32a4227bd562de29ab2e31fdcf776a",
    "spec/unit/provider/neutron_subnet/neutron_spec.rb": "5e1820f0b9ef24c358f4c1207507bc1d"
  }
}